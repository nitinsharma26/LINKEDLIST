int detectloop(Node *head) {
    if(head==NULL || head->next==NULL) return true;
    Node *slow,*fast;
    slow=fast=head;
    while(fast!=NULL && fast->next!=NULL){
        fast=fast->next->next;
        slow=slow->next;
        
        if(slow==fast)
            return 1;
    }
    return 0;
}
or
Nice Trick. But We Can Code Without data manipulation.
Reverse LL and check if new head is same as original head or not. In Looped LL new head is equal to original head. :)
