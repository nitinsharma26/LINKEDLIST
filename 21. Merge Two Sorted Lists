class Solution {
public:
    ListNode* mergeTwoLists(ListNode* a, ListNode* b) {
//         if(l1==NULL) return l2;
//         if(l2==NULL) return l1;
        
//         ListNode* ans=new ListNode(0);
//         ListNode *temp=ans;
        
//         while(l1!=NULL && l2!=NULL){
//             if(l1->val<=l2->val){
//                 temp->next=l1;
//                 l1=l1->next;
//             }
            
//             else{
//                 temp->next=l2;
//                 l2=l2->next;
//             }
            
//             temp=temp->next;
//         }
        
//         if(l1!=NULL){
//             temp->next=l1;
//         }
        
//         if(l2!=NULL){
//             temp->next=l2;
//         }
        
//         return ans->next;
        if(a==nullptr)return b;
    if(b==nullptr)return a;
    ListNode*c;
    if(a->val <=b->val){
        c=a;
        c->next=mergeTwoLists(a->next,b);
    }
    else{
        c=b;
        c->next=mergeTwoLists(a,b->next);
    }
    return c;
       
    }
};
